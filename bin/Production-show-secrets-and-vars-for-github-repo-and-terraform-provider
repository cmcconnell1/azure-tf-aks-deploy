#!/usr/bin/env bash
#set -x

export MY_ENV="prod"
INPUT_VARS_FILE="./Azure-Pre-Reqs/${MY_ENV}githubactions-vars"

printf "\n"
printf "Show our key/value pairs from the deployment outfile: $INPUT_VARS_FILE\n"
printf "########################################\n"

while IFS=: read -r KEY VALUE; do
  export "$KEY"="$VALUE";
  printf "KEY: $KEY VALUE: $VALUE\n"
done <"${INPUT_VARS_FILE}"

########################################
# set specific ENV-SPECIFIC VARS
# that get set with azure-login
########################################
export AZURE_KEY_VAULT_NAME="${MY_ENV}devops10381"

########################################
#echo "fetch the azure key vault secrets:"
#for AZURE_KEY_VAULT_SECRET in "${MY_ENV}-service-principal-client-id" "${MY_ENV}-service-principal-client-secret" "${MY_ENV}-service-principal-tenant-id" "${MY_ENV}-service-principal-subscription-id" ; do
#    echo
#    echo "$AZURE_KEY_VAULT_SECRET:"
#    az keyvault secret show --name $AZURE_KEY_VAULT_SECRET --vault-name $AZURE_KEY_VAULT_NAME --query "value"
#done
# fetch secrets from azure key vault
export SERVICE_PRINCIPAL_CLIENT_ID=$(az keyvault secret show --name "${MY_ENV}-service-principal-client-id" --vault-name $AZURE_KEY_VAULT_NAME --query "value")

export SERVICE_PRINCIPAL_CLIENT_SECRET=$(az keyvault secret show --name "${MY_ENV}-service-principal-client-secret" --vault-name $AZURE_KEY_VAULT_NAME --query "value")

export SERVICE_PRINCIPAL_TENANT_ID=$(az keyvault secret show --name "${MY_ENV}-service-principal-tenant-id" --vault-name $AZURE_KEY_VAULT_NAME --query "value")

export SERVICE_PRINCIPAL_SUBSCRIPTION_ID=$(az keyvault secret show --name "${MY_ENV}-service-principal-subscription-id" --vault-name $AZURE_KEY_VAULT_NAME --query "value")

########################################
# Information to setup GitHub Secrets and Terraform backend configuration is output by the script below. 
########################################
printf "

##################################################
# Terraform Backend config:
##################################################
Azure storage account details that we must add to the Terraform Backend Configuration--these go into the providers.tf file:
Resource Group: $RESOURCE_GROUP
Storage Account: $STORAGE_ACCOUNT_NAME
Container Name: $CONTAINER_NAME

i.e.:  in our providers.tf file where XXXX is the required GLOBALLY unique storage_account_name--we ensure this using \$RANDOM

  backend "azurerm" {
      resource_group_name  = "${MY_ENV}devops"
      storage_account_name = "${MY_ENV}devops${MY_RANDOM}" 
      container_name       = "${MY_ENV}devopstfstate"
      key                  = "terraform.tfstate"
  }

####################################################
# Gitub Repo Secrets config: Azure Service Principal secrets we must add to the GitHub Repo Secrets:
####################################################
ARM_CLIENT_ID: $SERVICE_PRINCIPAL_CLIENT_ID
ARM_CLIENT_SECRET: $SERVICE_PRINCIPAL_CLIENT_SECRET
ARM_TENANT_ID: $SERVICE_PRINCIPAL_TENANT_ID
ARM_SUBSCRIPTION_ID: $SERVICE_PRINCIPAL_SUBSCRIPTION_ID

####################################################
# Optional Github actions env vars for workflows:
# not needed if hardcoding them inside jobs.
####################################################
AZ_RESOURCE_GROUP: $RESOURCE_GROUP
AZ_CONTAINER_NAME: $CONTAINER_NAME
AZ_STORAGE_ACCOUNT: $STORAGE_ACCOUNT_NAME

"
printf "\n"

